export const ENGINEERED_PROBLEM_TYPE = {
  수학: '수학',
  '다이나믹 프로그래밍': '다이나믹 프로그래밍',
  그래프: '그래프',
  문자열: '문자열',
  '분할 정복': '분할 정복',
  구현: '구현',
  탐색: '탐색',
  '자료 구조': '자료 구조',
  '그리디 알고리즘': '그리디 알고리즘',
  '완전 탐색': '완전 탐색',
  정렬: '정렬',
  '애드 혹': '애드 혹',
  '투 포인터': '투 포인터',
  '이분 탐색': '이분 탐색',
  '누적 합': '누적 합',
  백트래킹: '백트래킹',
  비트마스킹: '비트마스킹',
  '많은 조건 분기': '많은 조건 분기',
  '해 구성하기': '해 구성하기',
  '최단 경로': '최단 경로',
  '분리 집합': '분리 집합',
  재귀: '재귀',
  트리: '트리',
  '세그먼트 트리': '세그먼트 트리',
  기하학: '기하학',
  '게임 이론': '게임 이론',
  '임의 정밀도 / 큰 수 연산': '임의 정밀도 / 큰 수 연산',
  '최소 스패닝 트리': '최소 스패닝 트리',
  확률론: '확률론',
  스위핑: '스위핑',
  조합론: '조합론',
  '오프라인 쿼리': '오프라인 쿼리',
  '안정 결혼 문제': '안정 결혼 문제',
  '오일러 경로': '오일러 경로',
  물리학: '물리학',
  '생성 함수': '생성 함수',
  '이분 매칭': '이분 매칭',
  '반평면 교집합': '반평면 교집합',
  '블록 껍질': '블록 껍질',
  '회전하는 캘리퍼스': '회전하는 캘리퍼스',
  '외판원 순회 문제': '외판원 순회 문제',
  '런타임 전의 전처리': '런타임 전의 전처리',
  '접미사 배열': '접미사 배열',
  센트로이드: '센트로이드',
  '값 / 좌표 압축': '값 / 좌표 압축',
  '위상 정렬': '위상 정렬',
  '강한 연결 요소': '강한 연결 요소',
  'Heavy-light 분할': 'Heavy-light 분할',
  '슬라이딩 윈도우': '슬라이딩 윈도우',
  KMP: 'KMP',
  '라빈–카프': '라빈–카프',
  '링크/컷 트리': '링크/컷 트리',
  '탑 트리': '탑 트리',
  '삼분 탐색': '삼분 탐색',
  '머지 소트 트리': '머지 소트 트리',
  '뤼카 정리': '뤼카 정리',
  '폴라드 로': '폴라드 로',
  수치해석: '수치해석',
  '선형 계획법': '선형 계획법',
  쌍대성: '쌍대성',
  '밀러–라빈 소수 판별법': '밀러–라빈 소수 판별법',
  '보로노이 다이어그램': '보로노이 다이어그램',
  '고속 푸리에 변환': '고속 푸리에 변환',
  '비둘기집 원리': '비둘기집 원리',
  '스프라그-그런디 정리': '스프라그-그런디 정리',
  '중간에서 만나기': '중간에서 만나기',
  '희소 배열': '희소 배열',
  역추적: '역추적',
  '2-sat': '2-sat',
  '린드스트롬–게셀–비엔노 보조정리': '린드스트롬–게셀–비엔노 보조정리',
  휴리스틱: '휴리스틱',
  홀짝성: '홀짝성',
  '홀의 결혼 정리': '홀의 결혼 정리',
  '트리의 지름': '트리의 지름',
  '담금질 기법': '담금질 기법',
  '이분 그래프': '이분 그래프',
  '중국인의 나머지 정리': '중국인의 나머지 정리',
  '벌리캠프–매시': '벌리캠프–매시',
  '보이어–무어 다수결 투표': '보이어–무어 다수결 투표',
  'Aliens 트릭': 'Aliens 트릭',
  '최대 유량': '최대 유량',
  매칭: '매칭',
  '도미네이터 트리': '도미네이터 트리',
  '스토어–바그너': '스토어–바그너',
  '크누스 X': '크누스 X',
  '레드-블랙 트리': '레드-블랙 트리',
} as const;

export const ENGINEERED_PROBLEM_TYPE_SCORE = {
  '다이나믹 프로그래밍': 100,
  그래프: 100,
  구현: 100,
  탐색: 100,
  '완전 탐색': 100,
  백트래킹: 100,

  '이분 탐색': 90,
  '최단 경로': 90,
  문자열: 90,
  재귀: 90,
  트리: 90,

  '분할 정복': 85,
  '누적 합': 80,
  '투 포인터': 80,
  '분리 집합': 80,

  정렬: 70,
  '자료 구조': 70,
  '그리디 알고리즘': 70,
  '값 / 좌표 압축': 70,
  KMP: 70,
  '슬라이딩 윈도우': 70,
  '트리의 지름': 70,
  비트마스킹: 70,
  '위상 정렬': 70,

  '강한 연결 요소': 60,
  스위핑: 60,
  '세그먼트 트리': 60,
  '이분 매칭': 60,
  '오프라인 쿼리': 60,
  역추적: 60,
  조합론: 60,
  매칭: 60,
  '최소 스패닝 트리': 60,
  '이분 그래프': 60,
  '최대 유량': 60,

  수학: 50,
  'Heavy-light 분할': 50,
  '라빈–카프': 50,
  '런타임 전의 전처리': 50,
  '중간에서 만나기': 50,
  '희소 배열': 50,

  '해 구성하기': 30,
  '많은 조건 분기': 30,
  '레드-블랙 트리': 30,
  '보이어–무어 다수결 투표': 30,
  '블록 껍질': 30,
  '삼분 탐색': 30,
  '외판원 순회 문제': 30,
  '안정 결혼 문제': 30,
  '접미사 배열': 30,
  센트로이드: 30,
  '2-sat': 30,
  'Aliens 트릭': 30,
  '홀의 결혼 정리': 30,

  기하학: 40,
  확률론: 40,
  '임의 정밀도 / 큰 수 연산': 40,
  '비둘기집 원리': 40,
  '머지 소트 트리': 40,
  '중국인의 나머지 정리': 40,
  '게임 이론': 40,

  '생성 함수': 20,
  '보로노이 다이어그램': 20,
  '선형 계획법': 20,
  '스토어–바그너': 20,
  '크누스 X': 20,
  '담금질 기법': 20,
  '반평면 교집합': 20,
  홀짝성: 20,
  '오일러 경로': 20,

  '린드스트롬–게셀–비엔노 보조정리': 10,
  물리학: 10,
  '벌리캠프–매시': 10,
  '도미네이터 트리': 10,
  '뤼카 정리': 10,
  '폴라드 로': 10,
  수치해석: 10,
  쌍대성: 10,
  '탑 트리': 10,
  휴리스틱: 10,
  '밀러–라빈 소수 판별법': 10,
} as const;

export const ENGINIEERED_PROBLEM_TYPE_HANDLER = {
  '그래프 이론': [ENGINEERED_PROBLEM_TYPE.그래프],
  '최단 경로': [
    ENGINEERED_PROBLEM_TYPE['최단 경로'],
    ENGINEERED_PROBLEM_TYPE.그래프,
  ],
  '최대 유량': [ENGINEERED_PROBLEM_TYPE.그래프],
  '최소 비용 최대 유량': [ENGINEERED_PROBLEM_TYPE.그래프],
  '플로이드–워셜': [
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE['최단 경로'],
  ],
  데이크스트라: [
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE['최단 경로'],
  ],
  비트마스킹: [ENGINEERED_PROBLEM_TYPE.비트마스킹],
  재귀: [ENGINEERED_PROBLEM_TYPE.재귀],
  구현: [ENGINEERED_PROBLEM_TYPE.구현],
  사칙연산: [ENGINEERED_PROBLEM_TYPE.수학],
  수학: [ENGINEERED_PROBLEM_TYPE.수학],
  '그리디 알고리즘': [ENGINEERED_PROBLEM_TYPE['그리디 알고리즘']],
  '누적 합': [ENGINEERED_PROBLEM_TYPE['누적 합']],
  '다이나믹 프로그래밍': [ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍']],
  '배낭 문제': [ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍']],
  정렬: [ENGINEERED_PROBLEM_TYPE.정렬],
  '많은 조건 분기': [ENGINEERED_PROBLEM_TYPE['많은 조건 분기']],
  '애드 혹': [ENGINEERED_PROBLEM_TYPE['애드 혹']],
  '분할 정복을 이용한 거듭제곱': [ENGINEERED_PROBLEM_TYPE['분할 정복']],
  '브루트포스 알고리즘': [ENGINEERED_PROBLEM_TYPE['완전 탐색']],
  '그래프 탐색': [ENGINEERED_PROBLEM_TYPE.그래프],
  '너비 우선 탐색': [
    ENGINEERED_PROBLEM_TYPE.탐색,
    ENGINEERED_PROBLEM_TYPE.그래프,
  ],
  '단절점과 단절선': [ENGINEERED_PROBLEM_TYPE.그래프],
  선인장: [ENGINEERED_PROBLEM_TYPE.그래프],
  '이중 연결 요소': [ENGINEERED_PROBLEM_TYPE.그래프],
  '유클리드 호제법': [ENGINEERED_PROBLEM_TYPE.수학],
  정수론: [ENGINEERED_PROBLEM_TYPE.수학],
  '두 포인터': [ENGINEERED_PROBLEM_TYPE['투 포인터']],
  '이분 탐색': [ENGINEERED_PROBLEM_TYPE['이분 탐색']],
  문자열: [ENGINEERED_PROBLEM_TYPE.문자열],
  '자료 구조': [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  트라이: [
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
    ENGINEERED_PROBLEM_TYPE.문자열,
  ],
  트리: [ENGINEERED_PROBLEM_TYPE.트리],
  '세그먼트 트리': [ENGINEERED_PROBLEM_TYPE['세그먼트 트리']],
  '우선순위 큐': [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  '집합과 맵': [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  '트리를 사용한 집합과 맵': [
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
    ENGINEERED_PROBLEM_TYPE.트리,
  ],
  확률론: [ENGINEERED_PROBLEM_TYPE.확률론],
  '아호-코라식': [ENGINEERED_PROBLEM_TYPE.문자열],
  '가장 긴 증가하는 부분 수열 문제': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
  ],
  '방향 비순환 그래프': [ENGINEERED_PROBLEM_TYPE.그래프],
  시뮬레이션: [ENGINEERED_PROBLEM_TYPE.구현],
  '임의 정밀도 / 큰 수 연산': [
    ENGINEERED_PROBLEM_TYPE['임의 정밀도 / 큰 수 연산'],
  ],
  스택: [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  기하학: [ENGINEERED_PROBLEM_TYPE.기하학],
  스위핑: [ENGINEERED_PROBLEM_TYPE.스위핑],
  '최소 공통 조상': [ENGINEERED_PROBLEM_TYPE.트리],
  '퍼시스턴트 세그먼트 트리': [ENGINEERED_PROBLEM_TYPE['세그먼트 트리']],
  '해 구성하기': [ENGINEERED_PROBLEM_TYPE['해 구성하기']],
  '게임 이론': [ENGINEERED_PROBLEM_TYPE['게임 이론']],
  '해시를 사용한 집합과 맵': [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  '기댓값의 선형성': [ENGINEERED_PROBLEM_TYPE.수학],
  백트래킹: [ENGINEERED_PROBLEM_TYPE.백트래킹],
  '비트 집합': [ENGINEERED_PROBLEM_TYPE.비트마스킹],
  '비트 집합을 이용한 최장 공통 부분 수열 최적화': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
    ENGINEERED_PROBLEM_TYPE.비트마스킹,
  ],
  '최장 공통 부분 수열 문제': [ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍']],
  '선분 교차 판정': [
    ENGINEERED_PROBLEM_TYPE.기하학,
    ENGINEERED_PROBLEM_TYPE['많은 조건 분기'],
  ],
  '깊이 우선 탐색': [
    ENGINEERED_PROBLEM_TYPE.탐색,
    ENGINEERED_PROBLEM_TYPE.그래프,
  ],
  큐: [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  무작위화: [ENGINEERED_PROBLEM_TYPE.수학],
  '포함 배제의 원리': [ENGINEERED_PROBLEM_TYPE.수학],
  조합론: [ENGINEERED_PROBLEM_TYPE.조합론],
  '분리 집합': [ENGINEERED_PROBLEM_TYPE['분리 집합']],
  '분할 정복': [ENGINEERED_PROBLEM_TYPE['분할 정복']],
  '오프라인 동적 연결성 판정': [ENGINEERED_PROBLEM_TYPE['오프라인 쿼리']],
  '오프라인 쿼리': [ENGINEERED_PROBLEM_TYPE['오프라인 쿼리']],
  '비트필드를 이용한 다이나믹 프로그래밍': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
    ENGINEERED_PROBLEM_TYPE.비트마스킹,
  ],
  '제곱근 분할법': [ENGINEERED_PROBLEM_TYPE['분할 정복']],
  '최대 유량 최소 컷 정리': [ENGINEERED_PROBLEM_TYPE.그래프],
  파싱: [ENGINEERED_PROBLEM_TYPE.문자열],
  '안정 결혼 문제': [ENGINEERED_PROBLEM_TYPE['안정 결혼 문제']],
  '소수 판정': [ENGINEERED_PROBLEM_TYPE.수학],
  '오일러 경로': [
    ENGINEERED_PROBLEM_TYPE['오일러 경로'],
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE.탐색,
  ],
  '0-1 너비 우선 탐색': [
    ENGINEERED_PROBLEM_TYPE.탐색,
    ENGINEERED_PROBLEM_TYPE.그래프,
  ],
  매내처: [ENGINEERED_PROBLEM_TYPE.수학],
  '부분집합의 합 다이나믹 프로그래밍': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
  ],
  '격자 그래프': [ENGINEERED_PROBLEM_TYPE.그래프],
  '피타고라스 정리': [ENGINEERED_PROBLEM_TYPE.수학],
  "mo's": [ENGINEERED_PROBLEM_TYPE['오프라인 쿼리']],
  '에라토스테네스의 체': [ENGINEERED_PROBLEM_TYPE.수학],
  '트리에서의 다이나믹 프로그래밍': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
    ENGINEERED_PROBLEM_TYPE.트리,
  ],
  물리학: [ENGINEERED_PROBLEM_TYPE.물리학],
  '가우스 소거법': [ENGINEERED_PROBLEM_TYPE.수학],
  '다항식 보간법': [ENGINEERED_PROBLEM_TYPE.수학],
  '생성 함수': [ENGINEERED_PROBLEM_TYPE['생성 함수']],
  선형대수학: [ENGINEERED_PROBLEM_TYPE.수학],
  '이분 매칭': [ENGINEERED_PROBLEM_TYPE['이분 매칭']],
  '반평면 교집합': [ENGINEERED_PROBLEM_TYPE['반평면 교집합']],
  '회전하는 캘리퍼스': [
    ENGINEERED_PROBLEM_TYPE['회전하는 캘리퍼스'],
    ENGINEERED_PROBLEM_TYPE.기하학,
    ENGINEERED_PROBLEM_TYPE['블록 껍질'],
  ],
  '외판원 순회 문제': [ENGINEERED_PROBLEM_TYPE['외판원 순회 문제']],
  '런타임 전의 전처리': [ENGINEERED_PROBLEM_TYPE['런타임 전의 전처리']],
  '3차원 기하학': [ENGINEERED_PROBLEM_TYPE.기하학],
  '작은 집합에서 큰 집합으로 합치는 테크닉': [],
  '접미사 배열과 LCP 배열': [
    ENGINEERED_PROBLEM_TYPE['접미사 배열'],
    ENGINEERED_PROBLEM_TYPE.문자열,
  ],
  '모듈로 곱셈 역원': [ENGINEERED_PROBLEM_TYPE.수학],
  '확장 유클리드 호제법': [ENGINEERED_PROBLEM_TYPE.수학],
  '오일러 피 함수': [ENGINEERED_PROBLEM_TYPE.수학],
  '느리게 갱신되는 세그먼트 트리': [ENGINEERED_PROBLEM_TYPE['세그먼트 트리']],
  센트로이드: [
    ENGINEERED_PROBLEM_TYPE.트리,
    ENGINEERED_PROBLEM_TYPE.센트로이드,
  ],
  '최소 스패닝 트리': [
    ENGINEERED_PROBLEM_TYPE['최소 스패닝 트리'],
    ENGINEERED_PROBLEM_TYPE.그래프,
  ],
  '값 / 좌표 압축': [ENGINEERED_PROBLEM_TYPE.수학],
  KMP: [ENGINEERED_PROBLEM_TYPE.문자열, ENGINEERED_PROBLEM_TYPE['KMP']],
  '위상 정렬': [
    ENGINEERED_PROBLEM_TYPE['위상 정렬'],
    ENGINEERED_PROBLEM_TYPE.그래프,
  ],
  '볼록 껍질을 이용한 최적화': [ENGINEERED_PROBLEM_TYPE['블록 껍질']],
  '플러드 필': [ENGINEERED_PROBLEM_TYPE.그래프, ENGINEERED_PROBLEM_TYPE.탐색],
  '강한 연결 요소': [
    ENGINEERED_PROBLEM_TYPE['강한 연결 요소'],
    ENGINEERED_PROBLEM_TYPE.그래프,
  ],
  '순열 사이클 분할': [
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE.탐색,
  ],
  'Heavy-light 분할': [
    ENGINEERED_PROBLEM_TYPE['Heavy-light 분할'],
    ENGINEERED_PROBLEM_TYPE.트리,
  ],
  '오일러 경로 테크닉': [
    ENGINEERED_PROBLEM_TYPE['오일러 경로'],
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE.탐색,
  ],
  '매개 변수 탐색': [ENGINEERED_PROBLEM_TYPE['이분 탐색']],
  '슬라이딩 윈도우': [ENGINEERED_PROBLEM_TYPE['슬라이딩 윈도우']],
  '센트로이드 분할': [
    ENGINEERED_PROBLEM_TYPE.트리,
    ENGINEERED_PROBLEM_TYPE.센트로이드,
  ],
  '벨만–포드': [
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE['최단 경로'],
  ],
  통계학: [ENGINEERED_PROBLEM_TYPE.수학],
  미적분학: [ENGINEERED_PROBLEM_TYPE.수학],
  '라빈–카프': [
    ENGINEERED_PROBLEM_TYPE.문자열,
    ENGINEERED_PROBLEM_TYPE['라빈–카프'],
  ],
  해싱: [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  '링크/컷 트리': [
    ENGINEERED_PROBLEM_TYPE['링크/컷 트리'],
    ENGINEERED_PROBLEM_TYPE.트리,
  ],
  '탑 트리': [ENGINEERED_PROBLEM_TYPE['탑 트리'], ENGINEERED_PROBLEM_TYPE.트리],
  소인수분해: [ENGINEERED_PROBLEM_TYPE.수학],
  '볼록 껍질': [ENGINEERED_PROBLEM_TYPE['블록 껍질']],
  '삼분 탐색': [ENGINEERED_PROBLEM_TYPE['삼분 탐색']],
  '머지 소트 트리': [
    ENGINEERED_PROBLEM_TYPE['세그먼트 트리'],
    ENGINEERED_PROBLEM_TYPE['머지 소트 트리'],
  ],
  '뤼카 정리': [
    ENGINEERED_PROBLEM_TYPE.수학,
    ENGINEERED_PROBLEM_TYPE['뤼카 정리'],
  ],
  '폴라드 로': [
    ENGINEERED_PROBLEM_TYPE['폴라드 로'],
    ENGINEERED_PROBLEM_TYPE.수학,
  ],
  '다각형의 넓이': [
    ENGINEERED_PROBLEM_TYPE.기하학,
    ENGINEERED_PROBLEM_TYPE.수학,
  ],
  수치해석: [ENGINEERED_PROBLEM_TYPE.수학, ENGINEERED_PROBLEM_TYPE.수치해석],
  '선형 계획법': [
    ENGINEERED_PROBLEM_TYPE.수학,
    ENGINEERED_PROBLEM_TYPE['선형 계획법'],
  ],
  쌍대성: [ENGINEERED_PROBLEM_TYPE.수학, ENGINEERED_PROBLEM_TYPE.쌍대성],
  '밀러–라빈 소수 판별법': [
    ENGINEERED_PROBLEM_TYPE.수학,
    ENGINEERED_PROBLEM_TYPE['밀러–라빈 소수 판별법'],
  ],
  '보로노이 다이어그램': [
    ENGINEERED_PROBLEM_TYPE.기하학,
    ENGINEERED_PROBLEM_TYPE['보로노이 다이어그램'],
  ],
  '차분 배열 트릭': [ENGINEERED_PROBLEM_TYPE['누적 합']],
  '고속 푸리에 변환': [ENGINEERED_PROBLEM_TYPE['고속 푸리에 변환']],
  '비둘기집 원리': [ENGINEERED_PROBLEM_TYPE['비둘기집 원리']],
  '스프라그–그런디 정리': [
    ENGINEERED_PROBLEM_TYPE['스프라그–그런디 정리'],
    ENGINEERED_PROBLEM_TYPE['게임 이론'],
  ],
  '중간에서 만나기': [ENGINEERED_PROBLEM_TYPE['중간에서 만나기']],
  '최대 부분 배열 문제': [ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍']],
  '희소 배열': [
    ENGINEERED_PROBLEM_TYPE['희소 배열'],
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
  ],
  '트리 분할': [ENGINEERED_PROBLEM_TYPE.트리],
  '병렬 이분 탐색': [ENGINEERED_PROBLEM_TYPE['이분 탐색']],
  '다차원 세그먼트 트리': [ENGINEERED_PROBLEM_TYPE['세그먼트 트리']],
  '커넥션 프로파일을 이용한 다이나믹 프로그래밍': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
  ],
  역추적: [ENGINEERED_PROBLEM_TYPE['역추적']],
  덱: [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  z: [ENGINEERED_PROBLEM_TYPE['분할 정복']],
  '뫼비우스 반전 공식': [ENGINEERED_PROBLEM_TYPE.수학],
  '2-sat': [ENGINEERED_PROBLEM_TYPE['2-sat']],
  '평면 그래프': [ENGINEERED_PROBLEM_TYPE.그래프],
  '연결 리스트': [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  '린드스트롬–게셀–비엔노 보조정리': [
    ENGINEERED_PROBLEM_TYPE['린드스트롬–게셀–비엔노 보조정리'],
  ],
  휴리스틱: [ENGINEERED_PROBLEM_TYPE.휴리스틱],
  '이산 로그': [ENGINEERED_PROBLEM_TYPE.수학],
  홀짝성: [ENGINEERED_PROBLEM_TYPE.홀짝성],
  '홀의 결혼 정리': [ENGINEERED_PROBLEM_TYPE['홀의 결혼 정리']],
  '덱을 이용한 구간 최댓값 트릭': [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  히르쉬버그: [ENGINEERED_PROBLEM_TYPE.문자열],
  '트리의 지름': [
    ENGINEERED_PROBLEM_TYPE.트리,
    ENGINEERED_PROBLEM_TYPE['트리의 지름'],
  ],
  '볼록 다각형 내부의 점 판정': [ENGINEERED_PROBLEM_TYPE.기하학],
  '담금질 기법': [ENGINEERED_PROBLEM_TYPE['담금질 기법']],
  '트리 압축': [ENGINEERED_PROBLEM_TYPE.트리],
  '오일러 지표 (χ=V-E+F)': [
    ENGINEERED_PROBLEM_TYPE.기하학,
    ENGINEERED_PROBLEM_TYPE.수학,
  ],
  '분할 정복을 사용한 최적화': [ENGINEERED_PROBLEM_TYPE['분할 정복']],
  '픽의 정리': [ENGINEERED_PROBLEM_TYPE.기하학, ENGINEERED_PROBLEM_TYPE.수학],
  '페르마의 소정리': [ENGINEERED_PROBLEM_TYPE.수학],
  '이분 그래프': [
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE['이분 그래프'],
  ],
  '트리에서의 전방향 다이나믹 프로그래밍': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
    ENGINEERED_PROBLEM_TYPE.트리,
  ],
  '정규 표현식': [ENGINEERED_PROBLEM_TYPE.문자열],
  '4차원 이상의 기하학': [ENGINEERED_PROBLEM_TYPE.기하학],
  '스플레이 트리': [
    ENGINEERED_PROBLEM_TYPE.트리,
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
  ],
  '함수형 그래프': [ENGINEERED_PROBLEM_TYPE.그래프],
  '베이즈 정리': [ENGINEERED_PROBLEM_TYPE.수학, ENGINEERED_PROBLEM_TYPE.확률론],
  '데카르트 트리': [
    ENGINEERED_PROBLEM_TYPE.트리,
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
  ],
  '트리 동형 사상': [ENGINEERED_PROBLEM_TYPE.트리],
  '중국인의 나머지 정리': [
    ENGINEERED_PROBLEM_TYPE.수학,
    ENGINEERED_PROBLEM_TYPE['중국인의 나머지 정리'],
  ],
  '현 그래프': [ENGINEERED_PROBLEM_TYPE.그래프],
  '각도 정렬': [ENGINEERED_PROBLEM_TYPE.기하학],
  '함수 개형을 이용한 최적화': [ENGINEERED_PROBLEM_TYPE.수학],
  '접미사 트리': [ENGINEERED_PROBLEM_TYPE.문자열],
  '벌리캠프–매시': [ENGINEERED_PROBLEM_TYPE.수학],
  '다항식을 이용한 선형점화식 계산': [ENGINEERED_PROBLEM_TYPE.수학],
  'bulldozer 트릭': [ENGINEERED_PROBLEM_TYPE.트리],
  '보이어–무어 다수결 투표': [
    ENGINEERED_PROBLEM_TYPE.문자열,
    ENGINEERED_PROBLEM_TYPE['보이어–무어 다수결 투표'],
  ],
  '오목 다각형 내부의 점 판정': [ENGINEERED_PROBLEM_TYPE.기하학],
  '배타적 논리합 기저 (gf(2))': [
    ENGINEERED_PROBLEM_TYPE.수학,
    ENGINEERED_PROBLEM_TYPE.비트마스킹,
  ],
  '쌍대 그래프': [ENGINEERED_PROBLEM_TYPE.그래프],
  'Aliens 트릭': [ENGINEERED_PROBLEM_TYPE['Aliens 트릭']],
  '단조 큐를 이용한 최적화': [ENGINEERED_PROBLEM_TYPE['자료 구조']],
  '회문 트리': [ENGINEERED_PROBLEM_TYPE.트리, ENGINEERED_PROBLEM_TYPE.문자열],
  서큘레이션: [ENGINEERED_PROBLEM_TYPE['최대 유량']],
  '불변량 찾기': [ENGINEERED_PROBLEM_TYPE['시뮬레이션']],
  '도형에서의 불 연산': [ENGINEERED_PROBLEM_TYPE.기하학],
  '세그먼트 트리 비츠': [ENGINEERED_PROBLEM_TYPE['세그먼트 트리']],
  '일반적인 매칭': [ENGINEERED_PROBLEM_TYPE['매칭']],
  '유향 최소 스패닝 트리': [ENGINEERED_PROBLEM_TYPE['최소 스패닝 트리']],
  헝가리안: [ENGINEERED_PROBLEM_TYPE['이분 그래프']],
  '최소 외접원': [ENGINEERED_PROBLEM_TYPE.기하학],
  로프: [ENGINEERED_PROBLEM_TYPE.문자열, ENGINEERED_PROBLEM_TYPE['자료 구조']],
  '양방향 탐색': [ENGINEERED_PROBLEM_TYPE.탐색, ENGINEERED_PROBLEM_TYPE.그래프],
  '그린 정리': [ENGINEERED_PROBLEM_TYPE.기하학],
  '덱을 이용한 다이나믹 프로그래밍': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
  ],
  '자릿수를 이용한 다이나믹 프로그래밍': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
  ],
  '도미네이터 트리': [
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE['도미네이터 트리'],
    ENGINEERED_PROBLEM_TYPE.트리,
  ],
  '스토어–바그너': [
    ENGINEERED_PROBLEM_TYPE.그래프,
    ENGINEERED_PROBLEM_TYPE['스토어–바그너'],
  ],
  '리–차오 트리': [
    ENGINEERED_PROBLEM_TYPE.트리,
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
  ],
  'utf-8 입력 처리': [ENGINEERED_PROBLEM_TYPE.문자열],
  '크누스 X': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
    ENGINEERED_PROBLEM_TYPE['크누스 X'],
  ],
  '이산 제곱근': [ENGINEERED_PROBLEM_TYPE.수학],
  '지수승강 보조정리': [ENGINEERED_PROBLEM_TYPE.수학],
  '피사노 주기': [ENGINEERED_PROBLEM_TYPE.수학],
  '춤추는 링크': [ENGINEERED_PROBLEM_TYPE.백트래킹],
  차수열: [ENGINEERED_PROBLEM_TYPE.수학, ENGINEERED_PROBLEM_TYPE.그래프],
  '차분 공격': [ENGINEERED_PROBLEM_TYPE.수학],
  조화수: [ENGINEERED_PROBLEM_TYPE.수학],
  '번사이드 보조정리': [ENGINEERED_PROBLEM_TYPE.수학],
  매트로이드: [ENGINEERED_PROBLEM_TYPE['그리디 알고리즘']],
  '생일 문제': [ENGINEERED_PROBLEM_TYPE.수학, ENGINEERED_PROBLEM_TYPE.확률론],
  '레드-블랙 트리': [
    ENGINEERED_PROBLEM_TYPE.트리,
    ENGINEERED_PROBLEM_TYPE['레드-블랙 트리'],
  ],
  '다중 대입값 계산': [ENGINEERED_PROBLEM_TYPE.수학],
  '하켄부시 게임': [ENGINEERED_PROBLEM_TYPE.수학],
  '경사 하강법': [
    ENGINEERED_PROBLEM_TYPE.수학,
    ENGINEERED_PROBLEM_TYPE['많은 조건 분기'],
  ],
  'cdq 분할 정복': [
    ENGINEERED_PROBLEM_TYPE['분할 정복'],
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
  ],
  '유리 등차수열의 내림 합': [
    ENGINEERED_PROBLEM_TYPE.수학,
    ENGINEERED_PROBLEM_TYPE.구현,
  ],
  '델로네 삼각분할': [
    ENGINEERED_PROBLEM_TYPE.기하학,
    ENGINEERED_PROBLEM_TYPE.그래프,
  ],
  '키네틱 세그먼트 트리': [
    ENGINEERED_PROBLEM_TYPE['세그먼트 트리'],
    ENGINEERED_PROBLEM_TYPE['자료 구조'],
  ],
  '크누스 최적화': [
    ENGINEERED_PROBLEM_TYPE['다이나믹 프로그래밍'],
    ENGINEERED_PROBLEM_TYPE['분할 정복'],
  ],
};
